version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce-postgres-simple
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_simple:/var/lib/postgresql/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # .NET Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-backend-simple
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=ecommerce;Username=ecommerce_user;Password=secure_password"
      Jwt__Key: "mySecretKeyThatIsAtLeast256BitsLongForJWTTokenSecurity"
      Jwt__Issuer: "EcommerceBackend"
      Jwt__Audience: "EcommerceUsers"
      Jwt__ExpirationInMinutes: "1440"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data_simple:
    driver: local

networks:
  ecommerce-network:
    driver: bridge
